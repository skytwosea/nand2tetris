// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0],sel=sel[0], out=w0);
    Mux(a=c[0], b=d[0],sel=sel[0], out=w1);
    Mux(a=w0, b=w1, sel=sel[1], out=w4);
    Mux(a=e[0], b=f[0],sel=sel[0], out=w2);
    Mux(a=g[0], b=h[0],sel=sel[0], out=w3);
    Mux(a=w2, b=w3, sel=sel[1], out=w5);
    Mux(a=w4, b=w5, sel=sel[2], out=out[0]);

    Mux(a=a[1], b=b[1],sel=sel[0], out=w6);
    Mux(a=c[1], b=d[1],sel=sel[0], out=w7);
    Mux(a=w6, b=w7, sel=sel[1], out=w10);
    Mux(a=e[1], b=f[1],sel=sel[0], out=w8);
    Mux(a=g[1], b=h[1],sel=sel[0], out=w9);
    Mux(a=w8, b=w9, sel=sel[1], out=w11);
    Mux(a=w10, b=w11, sel=sel[2], out=out[1]);

    Mux(a=a[2], b=b[2],sel=sel[0], out=w12);
    Mux(a=c[2], b=d[2],sel=sel[0], out=w13);
    Mux(a=w12, b=w13, sel=sel[1], out=w16);
    Mux(a=e[2], b=f[2],sel=sel[0], out=w14);
    Mux(a=g[2], b=h[2],sel=sel[0], out=w15);
    Mux(a=w14, b=w15, sel=sel[1], out=w17);
    Mux(a=w16, b=w17, sel=sel[2], out=out[2]);

    Mux(a=a[3], b=b[3],sel=sel[0], out=w18);
    Mux(a=c[3], b=d[3],sel=sel[0], out=w19);
    Mux(a=w18, b=w19, sel=sel[1], out=w22);
    Mux(a=e[3], b=f[3],sel=sel[0], out=w20);
    Mux(a=g[3], b=h[3],sel=sel[0], out=w21);
    Mux(a=w20, b=w21, sel=sel[1], out=w23);
    Mux(a=w22, b=w23, sel=sel[2], out=out[3]);

    Mux(a=a[4], b=b[4],sel=sel[0], out=w24);
    Mux(a=c[4], b=d[4],sel=sel[0], out=w25);
    Mux(a=w24, b=w25, sel=sel[1], out=w28);
    Mux(a=e[4], b=f[4],sel=sel[0], out=w26);
    Mux(a=g[4], b=h[4],sel=sel[0], out=w27);
    Mux(a=w26, b=w27, sel=sel[1], out=w29);
    Mux(a=w28, b=w29, sel=sel[2], out=out[4]);

    Mux(a=a[5], b=b[5],sel=sel[0], out=w30);
    Mux(a=c[5], b=d[5],sel=sel[0], out=w31);
    Mux(a=w30, b=w31, sel=sel[1], out=w34);
    Mux(a=e[5], b=f[5],sel=sel[0], out=w32);
    Mux(a=g[5], b=h[5],sel=sel[0], out=w33);
    Mux(a=w32, b=w33, sel=sel[1], out=w35);
    Mux(a=w34, b=w35, sel=sel[2], out=out[5]);

    Mux(a=a[6], b=b[6],sel=sel[0], out=w36);
    Mux(a=c[6], b=d[6],sel=sel[0], out=w37);
    Mux(a=w36, b=w37, sel=sel[1], out=w40);
    Mux(a=e[6], b=f[6],sel=sel[0], out=w38);
    Mux(a=g[6], b=h[6],sel=sel[0], out=w39);
    Mux(a=w38, b=w39, sel=sel[1], out=w41);
    Mux(a=w40, b=w41, sel=sel[2], out=out[6]);

    Mux(a=a[7], b=b[7],sel=sel[0], out=w42);
    Mux(a=c[7], b=d[7],sel=sel[0], out=w43);
    Mux(a=w42, b=w43, sel=sel[1], out=w46);
    Mux(a=e[7], b=f[7],sel=sel[0], out=w44);
    Mux(a=g[7], b=h[7],sel=sel[0], out=w45);
    Mux(a=w44, b=w45, sel=sel[1], out=w47);
    Mux(a=w46, b=w47, sel=sel[2], out=out[7]);

    Mux(a=a[8], b=b[8],sel=sel[0], out=w48);
    Mux(a=c[8], b=d[8],sel=sel[0], out=w49);
    Mux(a=w48, b=w49, sel=sel[1], out=w52);
    Mux(a=e[8], b=f[8],sel=sel[0], out=w50);
    Mux(a=g[8], b=h[8],sel=sel[0], out=w51);
    Mux(a=w50, b=w51, sel=sel[1], out=w53);
    Mux(a=w52, b=w53, sel=sel[2], out=out[8]);

    Mux(a=a[9], b=b[9],sel=sel[0], out=w54);
    Mux(a=c[9], b=d[9],sel=sel[0], out=w55);
    Mux(a=w54, b=w55, sel=sel[1], out=w58);
    Mux(a=e[9], b=f[9],sel=sel[0], out=w56);
    Mux(a=g[9], b=h[9],sel=sel[0], out=w57);
    Mux(a=w56, b=w57, sel=sel[1], out=w59);
    Mux(a=w58, b=w59, sel=sel[2], out=out[9]);

    Mux(a=a[10], b=b[10],sel=sel[0], out=w60);
    Mux(a=c[10], b=d[10],sel=sel[0], out=w61);
    Mux(a=w60, b=w61, sel=sel[1], out=w64);
    Mux(a=e[10], b=f[10],sel=sel[0], out=w62);
    Mux(a=g[10], b=h[10],sel=sel[0], out=w63);
    Mux(a=w62, b=w63, sel=sel[1], out=w65);
    Mux(a=w64, b=w65, sel=sel[2], out=out[10]);

    Mux(a=a[11], b=b[11],sel=sel[0], out=w66);
    Mux(a=c[11], b=d[11],sel=sel[0], out=w67);
    Mux(a=w66, b=w67, sel=sel[1], out=w70);
    Mux(a=e[11], b=f[11],sel=sel[0], out=w68);
    Mux(a=g[11], b=h[11],sel=sel[0], out=w69);
    Mux(a=w68, b=w69, sel=sel[1], out=w71);
    Mux(a=w70, b=w71, sel=sel[2], out=out[11]);

    Mux(a=a[12], b=b[12],sel=sel[0], out=w72);
    Mux(a=c[12], b=d[12],sel=sel[0], out=w73);
    Mux(a=w72, b=w73, sel=sel[1], out=w76);
    Mux(a=e[12], b=f[12],sel=sel[0], out=w74);
    Mux(a=g[12], b=h[12],sel=sel[0], out=w75);
    Mux(a=w74, b=w75, sel=sel[1], out=w77);
    Mux(a=w76, b=w77, sel=sel[2], out=out[12]);

    Mux(a=a[13], b=b[13],sel=sel[0], out=w78);
    Mux(a=c[13], b=d[13],sel=sel[0], out=w79);
    Mux(a=w78, b=w79, sel=sel[1], out=w82);
    Mux(a=e[13], b=f[13],sel=sel[0], out=w80);
    Mux(a=g[13], b=h[13],sel=sel[0], out=w81);
    Mux(a=w80, b=w81, sel=sel[1], out=w83);
    Mux(a=w82, b=w83, sel=sel[2], out=out[13]);

    Mux(a=a[14], b=b[14],sel=sel[0], out=w84);
    Mux(a=c[14], b=d[14],sel=sel[0], out=w85);
    Mux(a=w84, b=w85, sel=sel[1], out=w88);
    Mux(a=e[14], b=f[14],sel=sel[0], out=w86);
    Mux(a=g[14], b=h[14],sel=sel[0], out=w87);
    Mux(a=w86, b=w87, sel=sel[1], out=w89);
    Mux(a=w88, b=w89, sel=sel[2], out=out[14]);

    Mux(a=a[15], b=b[15],sel=sel[0], out=w90);
    Mux(a=c[15], b=d[15],sel=sel[0], out=w91);
    Mux(a=w90, b=w91, sel=sel[1], out=w94);
    Mux(a=e[15], b=f[15],sel=sel[0], out=w92);
    Mux(a=g[15], b=h[15],sel=sel[0], out=w93);
    Mux(a=w92, b=w93, sel=sel[1], out=w95);
    Mux(a=w94, b=w95, sel=sel[2], out=out[15]);
}
